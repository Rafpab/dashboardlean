library("tidyverse")
library("lubridate")
Sys.setlocale("LC_TIME","C")


shinyServer(function(input,output){
    popular_netflix <- read_tsv("https://top10.netflix.com/data/all-weeks-countries.tsv")
    netflix_titles <- read.csv("https://www.dropbox.com/s/ervmcd91t1o5xaw/netflix_titles.csv?dl=1",encoding = "UTF-8")
    netflix_titles$type <- as.factor(netflix_titles$type)
    netflix_titles$date_added2 <- as.Date(netflix_titles$date_added,format = "%B %d, %Y")
    netflix_titles$date_released <- as.Date(as.character(netflix_titles$release_year),format = "%Y",origin="1970-01-01")
    netflix_titles <- na.omit(netflix_titles)
    possible_years <- as.character(sort(unique(year(netflix_titles$date_added2))))
    
    netflix_titles$listed_in <- paste(netflix_titles$listed_in,", All",sep = "")
    netflix_titles$country <- paste(netflix_titles$country,", All",sep = "")
    netflix_titles$yearadded <- year(netflix_titles$date_added2)
    netflix_titles$yearadded <- paste(netflix_titles$yearadded,", All",sep = "")
    netflix_tv <- subset(netflix_titles,type=="TV Show")
    netflix_movies <- subset(netflix_titles,type=="Movie")
    netflix_movies$duration <- as.numeric(str_extract(netflix_movies$duration,"^[0-9]+ "))
    netflix_movies <- na.omit(netflix_movies)
    
    
    beginning <- unique(str_extract(netflix_titles$listed_in,"^[^,]+"))
    middle <- unique(str_extract(netflix_titles$listed_in,"(?<=,)[^,]+(?=,)"))
    middle <- gsub("^ +","",middle)
    end <- unique(str_extract(netflix_titles$listed_in,"[^,]+$"))
    end <- gsub("^ +","",end)
    categories <- c(beginning,middle,end)
    categories <- unique(categories)
    categories <- sort(as.character(na.omit(as.factor(categories))))
    
    beginning_m <- unique(str_extract(netflix_movies$listed_in,"^[^,]+"))
    middle_m <- unique(str_extract(netflix_movies$listed_in,"(?<=,)[^,]+(?=,)"))
    middle_m <- gsub("^ +","",middle_m)
    end_m <- unique(str_extract(netflix_movies$listed_in,"[^,]+$"))
    end_m <- gsub("^ +","",end_m)
    categories_movies <- c(beginning_m,middle_m,end_m)
    categories_movies <- unique(categories_movies)
    categories_movies <- sort(as.character(na.omit(as.factor(categories_movies))))
    
    countries <- unique(netflix_titles$country)
    countries_beginning <- unique(str_extract(countries,"^[^,]+"))
    countries_middle <- unique(str_extract(countries,"(?<=,)[^,]+(?=,)"))
    countries_middle <- gsub("^ +","",countries_middle)
    countries_ending <- unique(str_extract(countries,"[^,]+$"))
    countries_ending <- gsub("^ +","",countries_ending)
    countries_simplified <- unique(c(countries_beginning,countries_middle,countries_ending))
    countries_simplified <- sort(as.character(na.omit(as.factor(countries_simplified))))
    
    actors <- unique(netflix_titles$cast)
    actors_beginning <- unique(str_extract(actors,"^[^,]+"))
    actors_middle <- unique(str_extract(actors,"(?<=,)[^,]+(?=,)"))
    actors_middle <- gsub("^ +","",actors_middle)
    actors_ending <- unique(str_extract(actors,"[^,]+$"))
    actors_ending <- gsub("^ +","",actors_ending)
    actors_simplified <- unique(c(actors_beginning,actors_middle,actors_ending))
    actors_simplified <- str_extract(actors_simplified,"^[:print:]+\\s[:print:]+")
    actors_simplified <- sort(as.character(na.omit(as.factor(actors_simplified))))
    counted_actors <- c()
    for (i in actors_simplified) {
        actorssum <- sum(str_count(netflix_titles$cast,i))
        counted_actors <- append(counted_actors,actorssum)
    }
    
    sum_actors <- as.data.frame(cbind(actors_simplified,counted_actors))
    sum_actors$counted_actors <- as.numeric(sum_actors$counted_actors)
    sum_actors$actors_simplified <- as.factor(sum_actors$actors_simplified)
    sum_actors <- sum_actors[order(counted_actors,decreasing = FALSE),]
    sum_actors <- head(sum_actors,n=7)
    
    convertscore <- function(x) {
        
        if(x==1){return(10)}
        if(x==2){return(9)}
        if(x==3){return(8)}
        if(x==4){return(7)}
        if(x==5){return(6)}
        if(x==6){return(5)}
        if(x==7){return(4)}
        if(x==8){return(3)}
        if(x==9){return(2)}
        if(x==10){return(1)}
        
    }
    
    popular_netflix$scores <- as.numeric(lapply(popular_netflix$weekly_rank, convertscore))
    
    netflix_popularity_grouped <- popular_netflix %>% group_by(country_name,show_title) %>% summarise(totalscore = sum(scores))
    
    crossed_titles <- subset(netflix_popularity_grouped, show_title %in% netflix_titles$title)
    
    
    indices <- match(crossed_titles$show_title,netflix_titles$title, nomatch = NA, incomparables = NULL)
    crossed_categories <- netflix_titles[indices,11]
    crossed_titles$genre <- crossed_categories
    crossed_year <- netflix_titles[indices,14]
    crossed_titles$year_added <- crossed_year
    crossed_titles$country_name <- paste(crossed_titles$country_name,", All",sep = "")
        
    
    
    
    
    
    observeEvent(input$year_tv_movie_date,{
        netflix_bar <- subset(netflix_titles,date_added2 >= min(input$year_tv_movie_date) & date_added2 <= max(input$year_tv_movie_date))
        
        observeEvent(input$movie_tv_graph,{
            if(input$movie_tv_graph == "Share of movie/TV shows"){
                netflix_bar$year_added <- as.factor(format(netflix_bar$date_added2,format="%Y"))
                output$tv_movie_bar <- renderPlot({ggplot(netflix_bar,aes(x=year_added,fill=type))+
                        geom_bar(position = "fill") + ggtitle("Share of Movie/TV Shows for Netflix")+xlab("Year")+ylab("Share") 
                })
            }
            if(input$movie_tv_graph == "Timeline of total movies/TV shows by year added"){output$tv_movie_bar <- renderPlot({netflix_bar %>% count(type,year=year(date_added2)) %>% ggplot(aes(year,y=n,color=type))+geom_line()+geom_point()}
            )
            
            }
            
        }
        )
        
    }
    )
    
    observeEvent(input$year_tv_movie_date,{
        netflix_release <- subset(netflix_titles,year(date_released) >= year(min(input$year_tv_movie_date)) & year(date_released) <= year(max(input$year_tv_movie_date)))
        
        observeEvent(input$movie_tv_graph,{
            if(input$movie_tv_graph == "Timeline of total releases"){
                output$tv_movie_bar <- renderPlot({netflix_release %>% count(year=year(date_released)) %>% ggplot(aes(year,y=n))+geom_line()+geom_point()}) 
                
            }
            
            
        }
        )
        
    }
    )
    
    observeEvent(input$movie_tv_graph,{
        if(input$movie_tv_graph == "Most popular actors"){
            
            output$tv_movie_bar <- renderPlot({ggplot(sum_actors,aes(x=actors_simplified,y=counted_actors,fill=actors_simplified))+
                    geom_bar(stat = "identity") + ggtitle("Most popular actors by times casted")+xlab("Actor's name")+ylab("Times casted")+coord_flip() + theme(legend.position = "none")
            })   
        }
    }
                 
                 )
    
    
    average_lists <- reactive({list(input$list_movies,input$years_added,input$list_countries)})
    
    observeEvent(average_lists(),{
        
        
            netflix_movies <- subset(netflix_movies,grepl(input$list_movies,netflix_movies$listed_in)==TRUE & grepl(input$list_countries,netflix_movies$country)==TRUE & grepl(input$years_added,netflix_movies$yearadded)==TRUE)
            output$average_lengths <- renderText({paste(round(mean(netflix_movies$duration)),"mins")})
            output$number_movies_produced <- renderText({nrow(netflix_movies)})
            crossed_titles <- subset(crossed_titles,grepl(input$list_countries,crossed_titles$country_name)==TRUE & grepl(input$years_added,crossed_titles$year_added)==TRUE)
            counted_categories <- c()
            for (i in categories) {
                result <- sum(str_count(crossed_titles$genre,i))
                counted_categories <- append(counted_categories,result)
            }
            counted <- as.data.frame(cbind(categories,counted_categories))
            counted$counted_categories <- as.numeric(counted$counted_categories)
            counted$categories <- as.factor(counted$categories)
            counted <- counted[order(counted_categories,decreasing = TRUE),]
            counted <- head(counted,n=7)
            counted <- subset(counted,categories!="All")
            output$categories_country <- renderPlot({ggplot(counted,aes(x=categories,y=counted_categories,fill=categories)) + geom_bar(stat = "identity")})
        
        
    }
    
    )
    
    
    
    
}

)
