library("tidyverse")
library("lubridate")
Sys.setlocale("LC_TIME","C")


  popular_netflix <- read_tsv("https://top10.netflix.com/data/all-weeks-countries.tsv")
  netflix_titles <- read.csv("https://www.dropbox.com/s/ervmcd91t1o5xaw/netflix_titles.csv?dl=1",encoding = "UTF-8")
  netflix_titles$type <- as.factor(netflix_titles$type)
  netflix_titles$date_added2 <- as.Date(netflix_titles$date_added,format = "%B %d, %Y")
  netflix_titles <- na.omit(netflix_titles)
  possible_years <- as.character(sort(unique(year(netflix_titles$date_added2))))
  
  netflix_titles$listed_in <- paste(netflix_titles$listed_in,", All",sep = "")
  netflix_titles$country <- paste(netflix_titles$country,", All",sep = "")
  netflix_titles$yearadded <- year(netflix_titles$date_added2)
  netflix_titles$yearadded <- paste(netflix_titles$yearadded,", All",sep = "")
  netflix_tv <- subset(netflix_titles,type=="TV Show")
  netflix_movies <- subset(netflix_titles,type=="Movie")
  netflix_movies$duration <- as.numeric(str_extract(netflix_movies$duration,"^[0-9]+ "))
  netflix_movies <- na.omit(netflix_movies)
  
  beginning <- unique(str_extract(netflix_titles$listed_in,"^[^,]+"))
  middle <- unique(str_extract(netflix_titles$listed_in,"(?<=,)[^,]+(?=,)"))
  middle <- gsub("^ +","",middle)
  end <- unique(str_extract(netflix_titles$listed_in,"[^,]+$"))
  end <- gsub("^ +","",end)
  categories <- c(beginning,middle,end)
  categories <- unique(categories)
  categories <- sort(as.character(na.omit(as.factor(categories))))
  
  beginning_m <- unique(str_extract(netflix_movies$listed_in,"^[^,]+"))
  middle_m <- unique(str_extract(netflix_movies$listed_in,"(?<=,)[^,]+(?=,)"))
  middle_m <- gsub("^ +","",middle_m)
  end_m <- unique(str_extract(netflix_movies$listed_in,"[^,]+$"))
  end_m <- gsub("^ +","",end_m)
  categories_movies <- c(beginning_m,middle_m,end_m)
  categories_movies <- unique(categories_movies)
  categories_movies <- sort(as.character(na.omit(as.factor(categories_movies))))
  
  countries <- unique(netflix_titles$country)
  countries_beginning <- unique(str_extract(countries,"^[^,]+"))
  countries_middle <- unique(str_extract(countries,"(?<=,)[^,]+(?=,)"))
  countries_middle <- gsub("^ +","",countries_middle)
  countries_ending <- unique(str_extract(countries,"[^,]+$"))
  countries_ending <- gsub("^ +","",countries_ending)
  countries_simplified <- unique(c(countries_beginning,countries_middle,countries_ending))
  countries_simplified <- sort(as.character(na.omit(as.factor(countries_simplified))))
  
  convertscore <- function(x) {
    
    if(x==1){return(10)}
    if(x==2){return(9)}
    if(x==3){return(8)}
    if(x==4){return(7)}
    if(x==5){return(6)}
    if(x==6){return(5)}
    if(x==7){return(4)}
    if(x==8){return(3)}
    if(x==9){return(2)}
    if(x==10){return(1)}
    
  }
  
  popular_netflix$scores <- as.numeric(lapply(popular_netflix$weekly_rank, convertscore))
  
  netflix_popularity_grouped <- popular_netflix %>% group_by(country_name,show_title) %>% summarise(totalscore = sum(scores))
  
  crossed_titles <- subset(netflix_popularity_grouped, show_title %in% netflix_titles$title)
  
  
  indices <- match(crossed_titles$show_title,netflix_titles$title, nomatch = NA, incomparables = NULL)
  crossed_categories <- netflix_titles[indices,11]
  crossed_titles$genre <- crossed_categories
  crossed_titles$country_name <- paste(crossed_titles$country_name,", All",sep = "")


shinyUI(
    fluidPage(padding=5,tags$head(tags$style(HTML("pre {font-size: 20px;text-align:center;}"))),
              titlePanel("Flixable - Marketing Manager Tool"),
              sidebarLayout(
                  mainPanel(plotOutput("tv_movie_bar"),
                            div(style="width:200px;display:inline-block",verbatimTextOutput("average_lengths",placeholder = TRUE)),
                            div(style="width:200px;display:inline-block",verbatimTextOutput("number_movies_produced",placeholder = TRUE)),
                            plotOutput("categories_country")
                            ),
                  sidebarPanel(h4(strong("Plot share and total number of movies/TV Shows in the platform")),
                               selectInput("movie_tv_graph",label = "Select the type of graph you want to display",choices = c("Share of movie/TV shows","Timeline of total movies/TV shows by year added","Timeline of total releases","Most popular actors")),
                               dateRangeInput("year_tv_movie_date",label = "Indicate date range",
                                              start = "2012-01-01",end = "2020-12-31",
                                              min = min(netflix_titles$date_added2),max = max(netflix_titles$date_added2)),
                               h4(strong("Average length for movies")),
                               selectInput("list_movies",label = "Select the category of the movie",choices = c(categories_movies),selected = "All"),
                               selectInput("years_added",label = "Select the year in which the movie was added",choices = c("All",possible_years),selected = "All"),
                               selectInput("list_countries",label = "Select a country",choices = c("All",countries_simplified),selected = "All")
                  )
                  
              )))
